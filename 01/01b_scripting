^T:  Writing Code
^ST: Lecture 1B: Writing Code
^I:  Introduction to Programming for Public Policy
^SI: IPPP
^D:  September 27, 2017
^H:  \graphicspath{{../img/}}
^H:  \newcommand{\inlinelogo}[1]{\raisebox{-0.2em}{\includegraphics[height=1em]{#1}}}
^H:  \newcommand{\linklogo}[1]{\href{#1}{\raisebox{-0.1em}{\includegraphics[height=0.85em]{link.pdf}}}}
^H:  \include{pythonlst}
^H:  \include{bashlst}

+ Our First Script
- Our `salaries' command was getting hard to read (for humans).
- A \chred{script} is a saved series of instructions for the computer.
- We can write that series in many languages: bash, python, perl, \dots
%
- The command line language is `bash,'\footnote{Bourne Again SHell} and can be run via \tt{source}.
` \pr echo "echo hello world" > hw \\ \pr cat hw \\ echo hello world \\ \pr source hw \\ hello world
- But `echo' is not a great way to write our long command!

+ Writing Code: Atom, Spyder, and Jupyter
- Computers `interpret' your code, or run a `compiled binary.'
-- \chred{Interpreters} are computer programs that follow your instructions `step-by-step.'  So the shell is an interpreter.
-- \chred{Compilers} translate what you write into something the computer understands `natively' (ones and zeros = binary).
- Files must contain \emph{exactly} and \emph{only} the code: nothing extraneous.
-- So, needless to say (?), Microsoft Word won't cut it.
>0.5em
- Use \link{https://atom.io/}{Atom} \inlinelogo{atom} or \chred{spyder} \inlinelogo{spyder} (ships with Anaconda) to edit scripts.
-- I will \emph{not} delve into vi or emacs (command-line editors).
- For graphical work, we'll also use Jupyter notebooks \raisebox{-0.25em}{\includegraphics[height=1em]{../img/jupyter}}.

+ Using Atom
# Open Atom \inlinelogo{atom}, and create a file \texttt{hw.sh}.  Note its location!
# Write ``\tt{echo hello world}'' in this file and save it.
# Navigate to the directory that contains \tt{hw.sh}: \\ \texttt{   cd /Users/jsaxon/...}
# Finally, run it: \tt{source hw.sh}

+ chmod
- A file's `permissions' specify how users can interact with it.
-- Who can run it, read it, change it, etc?
- chmod allows you to change the file's default settings.
-- Add (+), remove (-), or set (=) rights to...
-- read (r), write (w), or execute/run (x) the file...
-- for you (u), people in a `group' (g), or anyone (o).
- Most often, make a script executable for yourself: \tt{u+x} or just \tt{+x}.

+ Making a Script Executable
-[A.] Go to the directory containing \tt{hw.sh} give yourself execute permissions.
-- This makes our script into a program. (!)
-[B.] Add ``\tt{\#!/bin/bash}'' to the top of \tt{hw.sh} on a line by itself.
-- This specifies the language to use -- in this case, bash.
-- We could also specify ``\tt{\#!/usr/bin/env python}" which effectively means ``whichever python is loaded."
-[C.] Now run it!
` \\\pr chmod u+x hw.sh \# A \\\ \pr ./hw.sh \hspace{3.5em} \# C -- don\tqs{}t need \tqs{}source\tqs{}! \\ hello world

+++ Two Examples on Income

+ Putting the Salaries Script Into a File
Full script \link{https://raw.githubusercontent.com/harris-ippp/lectures/master/01/ex/salaries.sh}{ex/salaries.sh} and the data file \linklogo{http://data.cityofchicago.org/api/views/xzkq-xp2w/rows.csv}.  
\fontsize{11}{12} \selectfont
\bashexternal{ex/salaries.sh}
Execute (run) \tt{salaries.sh} from the folder that contains \tt{salaries.csv}.

+ Income in the United States
What are the highest-income and highest-poverty counties in the US?
- Check out the \link{http://api.census.gov/data/2014/acs5/profile/variables.html}{variables} of the American Community Survey.
- Then use \link{http://api.census.gov/data/2014/acs5/profile?for=county:*&in=state:*&get=NAME,DP05_0001E,DP03_0062E,DP03_0119PE}{this call} from the ACS API.
- You then mainly just need to ``wrangle the text into order.''
-- This will get even easier with Python.
- Bonus: what about the highest and lowest in Illinois, etc...
%
- Check your answers with \link{https://en.wikipedia.org/wiki/Oglala_Lakota_County,_South_Dakota}{wikipedia}.
- Then compare with a \link{https://github.com/harris-ippp/lectures/blob/master/01/ex/income.sh}{solution}.

+ A First Python Script
''' Create a file \texttt{hello\_world.py}, using vim Atom, TextEdit, etc.
''' Write \texttt{print("hello world")} in this file and save it.
''' Navigate to the directory that holds that file: \\ \texttt{cd /Users/jsaxon/Documents/...}
''' Type: \texttt{python hello\_world.py}
- To go further, we need the rules and building blocks of Python...


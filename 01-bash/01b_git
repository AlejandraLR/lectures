^T:  Version Control: Git and GitHub
^ST: Git and GitHub
^I:  Introduction to Programming for Public Policy
^SI: IPPP
^D:  September 27, 2016
^H:  \graphicspath{{../img/}}

+ What is version control?  Why use it?
- Perhaps a familiar story, for paper drafts. $‚üπ $
- What if several people need to be able to edit \emph{simultaneously}.
- What if there are many different files that depend on eachother being at a specific version, all of which may be changed?
! Version Control Systems maintain a history and facilitate collaborative editing.
../img/college_papers.png:0.31:side

+ What is git?  GitHub?
- Git is \emph{the} modern VCS, designed by Linus Torvalds (creator of Linux).
- Git maintains a history of meaningful `commits.'
-- It is tremendously flexible (`branches').
- Git is \emph{distributed}: everyone has a copy of the entire history.
- However, it is often useful to maintain a master copy on a server where anyone can access it or `push' their changes: GitHub.
- GitHub is a nice \chred{server} for hosting repositories.
../img/git_github.pdf:0.6

+ Field Trip!
\centering
\link{https://github.com/harris-ippp/lectures/blob/master/01-bash/01b\_git\#L24}{github.com/harris-ippp/lectures}
github_clone_ssh.png:0.85 ~ \\ \chred{\large{git clone https://github.com/harris-ippp/lectures.git}}

+ Git Commands
You'll use these regularly:
- \chred{git clone}:  download repository
- \chred{git init}:   create a repository in this directory
- \chred{git add}:    add a file to `staging' area
- \chred{git status}: view status of all files
- \chred{git commit}: commit staged files to history
- \chred{git push}:   upload all changes to a remote server
- \chred{git log}:    show the history

+ A Standard Sequence \tright{Do in Terminal.}
Start with a single user and a single thread of edits:
# Download your homework skeleton:
#- \tt{git clone git@github.com:harris-ippp/01-welcome.git}
# Make your edits with Atom or vim.
# Add files to the `staging' area, and commit them; check the status and log to see that it worked:
#- \tt{git add q1.py}
#- \tt{git status \# is everything there?}
#- \tt{git commit -m "started question 1"}
#- \tt{git log \# now all part of the commit history?}
# Upload it to the server:
#- \tt{git push}
Repeat steps 2-4 as you work. \\
\visible<2->{\hspace{3.2em}\huge{\chred{This is what you'll use regularly.}}}

+ A Standard Sequence: Atom
The (A) staging, (B) commit, and (C) push can all be done from Atom!
\caveat{1}{22}{79.5}{46}{0}{(A)}
\caveat{1}{22}{79.5}{77}{0}{(B)}
\caveat{1}{22}{79.5}{93}{0}{(C)}
../img/github_atom_commit.png:0.87

